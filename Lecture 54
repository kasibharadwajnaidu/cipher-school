Lecture54- Priority Queues
package priorityQueueAndMaps;
import java.util.*;
public class InbuiltClassStudy {
public static void main(String[] args){
PeiorityQueue<Integer> pq = new PriorityQueue<Integer>()'
System.out.println(pq.isEmpty());
pq.add(3);
pq.add(4);
pq.add(1);
pq.add(9);
pq.add(7);
pq.add(2);
pq.add(6);
System.out.println(pq.isEmpty());
System.out.println(pq.peek());
System.out.println(pq.poll());
System.out.println(pq.poll());
System.out.println(pq.size());
}
}

package priorityQueueAndMaps;
class PQArray{
final int size = 10;
int arr[] = new  int[size];
int nItems = 0;
void add(int data)
{
if(isEmpty())
{
arr[0] = data;
nItres++;
return;
}
int i;
for(int i = nItems-1;i>=0;i++)
{
if(data<arr[i])
{
arr[i+1] =arr[i];
}
else{
arr[i+1] = data;
break;
}
}
nItems++;
}
int poll()
{
int temp = arr[nItems -1];
nItems = nItems -1;
return temp;
return arr[nItems] . nItems = nItems - 1
reutrn arr[--nItems];
}
int peek()
{
if(isEmpty()) return -1;
return arr[nItems -1];
}
boolean is Empty()
{
return nItems == 0;
}
int size(){
reutrn nItems;
}
}
public class ArrayImp{
public static void main(String[] args){
System.out.println(pq.isEmpty());
pq.add(3);
pq.add(4);
pq.add(1);
pq.add(9);
pq.add(7);
pq.add(2);
pq.add(6);
System.out.println(pq.isEmpty());
System.out.println(pq.peek());
System.out.println(pq.poll());
System.out.println(pq.poll());
System.out.println(pq.size());
}
}
