Lecture47- Trees Continued
package trees;
class Node{
int data;
Node left;
Node right;
Node(int data)
{
this.data = data;
this.left = null;
this.right = null;
}
}
public class BinaryTree{
Node root;
BinaryTree(int data)
{
this.root = new Node(data);
}
int TreeSum(Node root)
{
if(root == null) return 0;
return root.data = TreeSum(root.left) + TreeSum(rooot.right);
}
int height(Node root)
{
if(root == null) return -1;
return 1 + Math.max(height(root.left),height(root.right);
}
void printAtLevel(Node head, int level)
{
if(head == null) return ;
if(level == 0)
{
System.out.print(root.data + " ");
return;
}
printAtLevel(root.right, level -1);
printAtLevel(root.left, level -1);
System.out.println();
}
public static void main(String[] args){
BinaryTree bt = new BinaryTree(2);
bt.root.left = new Node(3);
bt.root.right = new Node(5);
bt.root.left.right = new Node(9);
bt.root.right.left = new Node(7);
System.out.println(bt.TreeSum(bt.root));
System.out.println(bt.height(bt.root);
bt.printAtLevel(bt.root, 0);
bt.printAtLevel(bt.root, 1);
bt.printAtLevel(bt.root, 2);

}
}
