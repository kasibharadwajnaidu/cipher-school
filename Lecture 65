Lecture65- Dynamic Programming Continued 2
package dp;
public class LCS  {
static int doLCS(String s1, String s2, int m, int n)
{
if(m==0 || n==0) return 0;
if(s1.charAt(m-1) == s2.charAt(n-1))
{
return 1 + doLCS(s1, s2, m-1, n-1);
}
return Math.max(doLCS(s1, s2, m, n-1), doLCS(s1, s2, m-1, n);
}

static int doLCS(String s1, String s2, int m, int n, int dp[][])
{
if(m==0 || n==0) return 0;
if(dp[m][n]!=0) reutrn dp[m][n];
if(s1.charAt(m-1) == s2.charAt(n-1))
{
return 1 + doLCSM(s1, s2, m-1, n-1);
}
dp[m][n] = Math.max(doLCS(s1, s2, m, n-1), doLCS(s1, s2, m-1, n);
return dp[m][n];
}

static int doLCST(String s1, String s2, int m, int n)
{
if(m==0 || n==0) return 0;
if(dp[][] =  new int[m+1][n+1];
for(int i=0;i<=m;i++){
for(int j=0;j<=n;j++){
if(i==0 || j==0){
dp[i][j] = 0;
}
else if(s1.charAt(i-1) == s2.charAt(j-1))
{
dp[i][j] = 1 + dp[i-1][j-1];
}
else{
dp[i][j] = Math.max(dp[i][j-1], dp[i-1][j]);
}
}
}
return dp[m][n];
}

public static void main(String[] args) {
String s1 = "ABCGKH";
String s2 = "AEKFHR";
int m = s.length();
int n = s2.length();
System.out.println(doLCS(s1,s2,m,n));

int dp[][] = new int[m+1][n+1];
System.out.println(doLCS(s1,s2,m,n));

System.out.println(doLCST(s1,s2,m,n));
}
}

class Solution
{
static int lcs(int x.int y, String s1, String s2)
{
if(m==0 || n==0) return 0;
if(dp[][] =  new int[m+1][n+1];
for(int i=0;i<=m;i++){
for(int j=0;j<=n;j++){
if(i==0 || j==0){
dp[i][j] = 0;
}
else if(s1.charAt(i-1) == s2.charAt(j-1))
{
dp[i][j] = 1 + dp[i-1][j-1];
}
else{
dp[i][j] = Math.max(dp[i][j-1], dp[i-1][j]);
}
}
}
return dp[m][n];
}
