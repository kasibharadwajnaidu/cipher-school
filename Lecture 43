Lecture43- Queues Pt. 2
code:
package queues;
public class QueueInterfaceStudy {
public static void main(String[] args){
Queue<Integer> q = new  LinkedList<>();
System.out.println(q.isEmpty());
q.add(1);
q.add(2);
q.add(3);
System.out.println(q.isEmpty());
System.out.println(q.poll());
System.out.println(q.peek());

}
}

class Queues
{
Queue<Integer> q1 = new LinkedList<Integer>();
Queue<Integer> q2 = new LinkedList<Integer>();
void push(int a)
{
q1.add(a);
}

int pop()
{
if(q1.isEmpty()) return -1;
while(q1.size!=1)
{
q1.add(q1.poll());
}
int lastElement = q1.poll();
Queue<Integer> rwmp = q1;
q1=q2;
q2=temp;
return lastElement;

}
}

class Queues
{
Queue<Integer> q1 = new LinkedList<Integer>();
Queue<Integer> q2 = new LinkedList<Integer>();
void push(int a)
{
q2.add(a);
while (!q1.isEmpty()) q2.add(q1.
}

int pop()
{
if(q1.isEmpty()) return -1;
